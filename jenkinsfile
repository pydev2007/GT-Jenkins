@Library('shared-library@GT-Testing') _
pipeline {
    agent { label 'docker' }
    options {
        timestamps()
        buildDiscarder(logRotator(daysToKeepStr: '21'))
        disableConcurrentBuilds()
    }
    environment{
        WEBHOOK = credentials('Slack-Webhook')
    }
    stages {
        stage('Checking for running containers') {
            steps {
                script {
                    // def output = sh(returnStdout: true, script: "docker info --format '{{json .ContainersRunning}}'").trim()
                    def output = sh(returnStdout: true, script: "docker ps").trim()
                    echo "Output: '${output}'"
                    webhookSend("${output} containers running", "$WEBHOOK")
                }
                
                

            }
        }
        stage('Test') {
            steps {
                echo 'Testing..'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }

        }
    }
}
