@Library("shared-library@GE-Testing")

pipeline {
    agent { label 'docker' }
    options {
        timestamps()
        buildDiscarder(logRotator(daysToKeepStr: '21'))
        disableConcurrentBuilds()
    }
    stages {
        stage('Checking for running containers') {
            steps {
                script {
                    def output = sh(returnStdout: true, script: "docker info --format '{{json .ContainersRunning}}'").trim()
                    echo "Output: '${output}'"
                }
                withCredentials([string(credentialsId: 'Slack-Webhook', variable: 'webhook-url')]) {
                    webhookSend("${output} containers running", webhook-url)
                }

            }
        }
        stage('Test') {
            steps {
                echo 'echo Testing..'
            }
        }
        stage('Test') {
            steps {
                echo 'Testing..'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }

        }
    }
}
